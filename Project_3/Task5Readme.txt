что значит min-height: 100vh;
-----------------------------
min-height: 100vh; — это CSS-свойство, которое устанавливает минимальную высоту элемента равной 100% высоты видимой области экрана (viewport height). Давай разберем это подробнее:

min-height: Это CSS-свойство определяет минимальную высоту элемента. Это означает, что элемент будет занимать как минимум указанное значение высоты, но может увеличиваться, если его содержимое требует больше места.

100vh: Это единица измерения в CSS, которая означает 100% высоты viewport.

Viewport — это видимая область веб-страницы в окне браузера. Ее размер может меняться в зависимости от размера окна браузера и устройства (например, на мобильном телефоне viewport будет меньше, чем на настольном компьютере).
vh (viewport height) — это относительная единица измерения, где 1vh равен 1% высоты viewport. Таким образом, 100vh означает 100% высоты видимой области экрана.
Вместе min-height: 100vh; означает, что элемент, к которому применено это свойство, будет занимать как минимум всю высоту видимого окна браузера.

Когда это полезно:

"Липкий" футер (Sticky Footer): Один из самых распространенных случаев использования min-height: 100vh; — это заставить футер оставаться внизу окна браузера, даже если контента на странице недостаточно для его заполнения. Обычно это применяется к элементу <body> или контейнеру, оборачивающему все содержимое страницы.
Важно помнить:

min-height задает минимальную высоту. Если контента внутри элемента больше, чем высота viewport, элемент будет автоматически расширяться, чтобы вместить весь контент, и высота станет больше 100vh.
Если вы хотите, чтобы элемент всегда занимал ровно 100% высоты viewport и обрезал все, что не помещается, вам следует использовать height: 100vh;. Однако это может привести к проблемам с прокруткой, если контента больше, чем высота экрана. Поэтому min-height: 100vh; обычно является более предпочтительным вариантом.
*****************************

что значит flex-grow: 1;
-----------------------------
flex-grow: 1; — это CSS-свойство, которое применяется к flex-элементу (прямому потомку элемента с display: flex;) и определяет, насколько этот элемент должен увеличиваться в размере относительно других flex-элементов в том же flex-контейнере, чтобы занять доступное свободное пространство.

Давай разберем это по частям:
* flex-grow: Это свойство CSS, которое указывает коэффициент роста flex-элемента. Когда в flex-контейнере есть свободное пространство (после того, как все flex-элементы заняли свое базовое пространство), элементы с положительным значением flex-grow будут растягиваться, чтобы заполнить это пространство.

* 1: Это значение коэффициента роста. Оно означает, что данный flex-элемент должен занять всю доступную долю свободного пространства, оставшуюся после распределения базовых размеров (определенных свойствами width, height или flex-basis) и фиксированных размеров других элементов.

Как это работает на практике:
Представь, что у тебя есть flex-контейнер с несколькими flex-элементами.
Браузер сначала определяет базовый размер каждого flex-элемента (исходя из его width, height или flex-basis).
Затем браузер вычисляет, сколько свободного места осталось в flex-контейнере после размещения всех элементов.
Если у одного или нескольких flex-элементов установлено flex-grow с положительным значением, это свободное пространство распределяется между ними пропорционально их коэффициентам flex-grow.


